# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# Display Name of each step should be prefixed with one of the following:
#   CR-QC: for quality control measures.
#   CR-BUILD: for build-related tasks.
#   CR-DEPLOY: for publication or deployment.
#   [no prefix]: for unrelated CI setup/tooling.

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python35:
      PYTHON_VERSION: '3.5'
    Python36:
      PYTHON_VERSION: '3.6'
    Python37:
      PYTHON_VERSION: '3.7'
  maxParallel: 3

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python version'
  inputs:
    versionSpec: '$(PYTHON_VERSION)'
    architecture: 'x64'

- script: |
    python -m pip install -e ./[ci]
  displayName: 'CR-QC: Install coderedcms from local repo'

- script: |
    coderedcms start testproject --name="Test Project" --domain="www.example.com"
  displayName: 'CR-QC: Create starter project from template'

- script: |
    #coverage run testproject/manage.py test coderedcms --settings=coderedcms.tests.settings
    pytest --ds=coderedcms.tests.settings --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
  displayName: 'CR-QC: Run unit tests'

- script: |
    flake8 coderedcms testproject --exit-zero
  displayName: 'CR-QC: Static analysis'

#- script: |
#    coverage xml -o $(System.DefaultWorkingDirectory)/coverage.xml
#  displayName: 'Generate code coverage report'

- task: PublishTestResults@2
  displayName: 'Publish unit test report'
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
