# Generated by Django 2.1.5 on 2019-04-12 19:04

import coderedcms.blocks.base_blocks
import coderedcms.blocks.html_blocks
import coderedcms.fields
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.table_block.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('coderedcms', '0013_pagepreview_templates'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(allow_unicode=True, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Classifier',
                'verbose_name_plural': 'Classifiers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassifierTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('slug', models.SlugField(allow_unicode=True, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('classifier', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='coderedcms.Classifier', verbose_name='Classifier')),
            ],
            options={
                'verbose_name': 'Classifier Term',
                'verbose_name_plural': 'Classifier Terms',
            },
        ),
        migrations.AlterField(
            model_name='carouselslide',
            name='content',
            field=coderedcms.fields.CoderedStreamField([], blank=True),
        ),
        migrations.AlterField(
            model_name='coderedpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Used to organize pages across the site.', through='coderedcms.CoderedTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='contentwall',
            name='content',
            field=coderedcms.fields.CoderedStreamField([], blank=True, verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='footer',
            name='content',
            field=coderedcms.fields.CoderedStreamField([], blank=True, verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='reusablecontent',
            name='content',
            field=coderedcms.fields.CoderedStreamField([], blank=True, verbose_name='content'),
        ),
        migrations.AddField(
            model_name='coderedpage',
            name='classifier_terms',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, help_text='Categorize and group pages together with classifiers. Used to organize and filter pages across the site.', to='coderedcms.ClassifierTerm', verbose_name='Classifiers'),
        ),
        migrations.AddField(
            model_name='coderedpage',
            name='index_classifiers',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, help_text='Enable filtering child pages by these classifiers.', to='coderedcms.Classifier', verbose_name='Filter child pages by'),
        ),
    ]
