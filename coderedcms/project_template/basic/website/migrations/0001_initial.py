# Generated by Django 4.2.19 on 2025-02-07 00:22

import coderedcms.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import eventtools.models
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('coderedcms', '0042_remove_coderedsessionformsubmission_thumbnails_by_path'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleIndexPage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('hero', 88), ('row', 82), ('cardgrid', 86), ('html', 29)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2)]], {}), 4: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'label': 'Full width', 'required': False}), 5: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Background images scroll slower than foreground images, creating an illusion of depth.', 'label': 'Parallax Effect', 'required': False}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'label': 'Tile background image', 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Background color', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Text color', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.BooleanBlock', (), {'label': 'Full width', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Always expanded'), ('sm', 'sm - Expand on small screens (phone, 576px) and larger'), ('md', 'md - Expand on medium screens (tablet, 768px) and larger'), ('lg', 'lg - Expand on large screens (laptop, 992px) and larger'), ('xl', 'xl - Expand on extra large screens (wide monitor, 1200px)')], 'help_text': 'Screen size at which the column will expand horizontally or stack vertically.', 'required': False, 'verbose_name': 'Column Breakpoint'}), 12: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('column_breakpoint', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Automatically size'), ('12', 'Full row'), ('6', 'Half - 1/2 column'), ('4', 'Thirds - 1/3 column'), ('8', 'Thirds - 2/3 column'), ('3', 'Quarters - 1/4 column'), ('9', 'Quarters - 3/4 column'), ('2', 'Sixths - 1/6 column'), ('10', 'Sixths - 5/6 column'), ('1', 'Twelfths - 1/12 column'), ('5', 'Twelfths - 5/12 column'), ('7', 'Twelfths - 7/12 column'), ('11', 'Twelfths - 11/12 column')], 'label': 'Column size', 'required': False}), 14: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 15: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('ga_tracking_event_category', 15), ('ga_tracking_event_label', 16)]], {}), 18: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 19: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 20: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 23: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('button_style', 22), ('button_size', 23)]], {}), 25: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 26: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 28: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('image', 25), ('alt_text', 27)]], {}), 29: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 30: ('wagtail.blocks.StructBlock', [[('settings', 17), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('downloadable_file', 19)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 32: ('wagtail.blocks.StructBlock', [[('settings', 3), ('url', 31)]], {}), 33: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 34: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('settings', 3), ('text', 33), ('author', 34)]], {}), 36: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 37: ('wagtail.blocks.StructBlock', [[('settings', 3), ('table', 36)]], {}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 41: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('settings', 3), ('search', 38), ('map_title', 39), ('place_id', 40), ('map_zoom_level', 41)]], {}), 43: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 44: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 45: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 46: ('wagtail.blocks.StructBlock', [[('settings', 3), ('indexed_by', 43), ('classified_by', 44), ('num_posts', 45)]], {}), 47: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 48: ('wagtail.blocks.StructBlock', [[('settings', 3), ('page', 47)]], {}), 49: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 50: ('wagtail.blocks.StructBlock', [[('settings', 3), ('accordion', 49)]], {}), 51: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 52: ('wagtail.blocks.StructBlock', [[('custom_template', 51), ('custom_css_class', 1), ('custom_id', 2)]], {}), 53: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 56: ('wagtail.blocks.StreamBlock', [[('Links', 24)]], {'blank': True, 'label': 'Links', 'required': False}), 57: ('wagtail.blocks.StructBlock', [[('settings', 52), ('image', 53), ('title', 21), ('subtitle', 54), ('description', 55), ('links', 56)]], {}), 58: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 59: ('wagtail.blocks.StructBlock', [[('settings', 3), ('carousel', 58)]], {}), 60: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 61: ('wagtail.blocks.StructBlock', [[('settings', 3), ('film_strip', 60)]], {}), 62: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 63: ('wagtail.blocks.StructBlock', [[('settings', 3), ('collection', 62)]], {}), 64: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 65: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48)]], {'label': 'Content'}), 66: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 67: ('wagtail.blocks.StreamBlock', [[('text', 66), ('button', 24)]], {'label': 'Modal footer', 'required': False}), 68: ('wagtail.blocks.StructBlock', [[('settings', 3), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('header', 64), ('content', 65), ('footer', 67)]], {}), 69: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 70: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 71: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 72: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 73: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 74: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 70), ('name', 71), ('description', 72), ('price', 73)]], {}), 75: ('wagtail.blocks.StreamBlock', [[('item', 74)]], {'label': 'Items'}), 76: ('wagtail.blocks.StructBlock', [[('settings', 3), ('heading', 69), ('items', 75)]], {}), 77: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 78: ('wagtail.blocks.StructBlock', [[('settings', 3), ('content', 77)]], {}), 79: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48), ('accordion', 50), ('card', 57), ('carousel', 59), ('film_strip', 61), ('image_gallery', 63), ('modal', 68), ('pricelist', 76), ('reusable_content', 78)]], {'label': 'Content'}), 80: ('wagtail.blocks.StructBlock', [[('settings', 12), ('column_size', 13), ('content', 79)]], {}), 81: ('wagtail.blocks.StreamBlock', [[('content', 80)]], {'label': 'Content'}), 82: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 10), ('content', 81)]], {}), 83: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/cardgrid_group.html', 'Card group - attached cards of equal size'), ('coderedcms/blocks/cardgrid_deck.html', 'Card deck - separate cards of equal size'), ('coderedcms/blocks/cardgrid_columns.html', 'Card masonry - fluid brick pattern')], 'label': 'Template', 'required': False}), 84: ('wagtail.blocks.StructBlock', [[('custom_template', 83), ('custom_css_class', 1), ('custom_id', 2)]], {}), 85: ('wagtail.blocks.StreamBlock', [[('card', 57)]], {'label': 'Content'}), 86: ('wagtail.blocks.StructBlock', [[('settings', 84), ('fluid', 10), ('content', 85)]], {}), 87: ('wagtail.blocks.StreamBlock', [[('row', 82), ('cardgrid', 86), ('html', 29)]], {'label': 'Content'}), 88: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 4), ('is_parallax', 5), ('background_image', 6), ('tile_image', 7), ('background_color', 8), ('foreground_color', 9), ('content', 87)]], {})}, null=True)),
            ],
            options={
                'verbose_name': 'Article Landing Page',
            },
            bases=('coderedcms.coderedpage',),
        ),
        migrations.CreateModel(
            name='EventIndexPage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('hero', 88), ('row', 82), ('cardgrid', 86), ('html', 29)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2)]], {}), 4: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'label': 'Full width', 'required': False}), 5: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Background images scroll slower than foreground images, creating an illusion of depth.', 'label': 'Parallax Effect', 'required': False}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'label': 'Tile background image', 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Background color', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Text color', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.BooleanBlock', (), {'label': 'Full width', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Always expanded'), ('sm', 'sm - Expand on small screens (phone, 576px) and larger'), ('md', 'md - Expand on medium screens (tablet, 768px) and larger'), ('lg', 'lg - Expand on large screens (laptop, 992px) and larger'), ('xl', 'xl - Expand on extra large screens (wide monitor, 1200px)')], 'help_text': 'Screen size at which the column will expand horizontally or stack vertically.', 'required': False, 'verbose_name': 'Column Breakpoint'}), 12: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('column_breakpoint', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Automatically size'), ('12', 'Full row'), ('6', 'Half - 1/2 column'), ('4', 'Thirds - 1/3 column'), ('8', 'Thirds - 2/3 column'), ('3', 'Quarters - 1/4 column'), ('9', 'Quarters - 3/4 column'), ('2', 'Sixths - 1/6 column'), ('10', 'Sixths - 5/6 column'), ('1', 'Twelfths - 1/12 column'), ('5', 'Twelfths - 5/12 column'), ('7', 'Twelfths - 7/12 column'), ('11', 'Twelfths - 11/12 column')], 'label': 'Column size', 'required': False}), 14: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 15: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('ga_tracking_event_category', 15), ('ga_tracking_event_label', 16)]], {}), 18: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 19: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 20: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 23: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('button_style', 22), ('button_size', 23)]], {}), 25: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 26: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 28: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('image', 25), ('alt_text', 27)]], {}), 29: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 30: ('wagtail.blocks.StructBlock', [[('settings', 17), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('downloadable_file', 19)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 32: ('wagtail.blocks.StructBlock', [[('settings', 3), ('url', 31)]], {}), 33: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 34: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('settings', 3), ('text', 33), ('author', 34)]], {}), 36: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 37: ('wagtail.blocks.StructBlock', [[('settings', 3), ('table', 36)]], {}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 41: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('settings', 3), ('search', 38), ('map_title', 39), ('place_id', 40), ('map_zoom_level', 41)]], {}), 43: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 44: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 45: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 46: ('wagtail.blocks.StructBlock', [[('settings', 3), ('indexed_by', 43), ('classified_by', 44), ('num_posts', 45)]], {}), 47: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 48: ('wagtail.blocks.StructBlock', [[('settings', 3), ('page', 47)]], {}), 49: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 50: ('wagtail.blocks.StructBlock', [[('settings', 3), ('accordion', 49)]], {}), 51: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 52: ('wagtail.blocks.StructBlock', [[('custom_template', 51), ('custom_css_class', 1), ('custom_id', 2)]], {}), 53: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 56: ('wagtail.blocks.StreamBlock', [[('Links', 24)]], {'blank': True, 'label': 'Links', 'required': False}), 57: ('wagtail.blocks.StructBlock', [[('settings', 52), ('image', 53), ('title', 21), ('subtitle', 54), ('description', 55), ('links', 56)]], {}), 58: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 59: ('wagtail.blocks.StructBlock', [[('settings', 3), ('carousel', 58)]], {}), 60: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 61: ('wagtail.blocks.StructBlock', [[('settings', 3), ('film_strip', 60)]], {}), 62: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 63: ('wagtail.blocks.StructBlock', [[('settings', 3), ('collection', 62)]], {}), 64: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 65: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48)]], {'label': 'Content'}), 66: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 67: ('wagtail.blocks.StreamBlock', [[('text', 66), ('button', 24)]], {'label': 'Modal footer', 'required': False}), 68: ('wagtail.blocks.StructBlock', [[('settings', 3), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('header', 64), ('content', 65), ('footer', 67)]], {}), 69: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 70: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 71: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 72: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 73: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 74: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 70), ('name', 71), ('description', 72), ('price', 73)]], {}), 75: ('wagtail.blocks.StreamBlock', [[('item', 74)]], {'label': 'Items'}), 76: ('wagtail.blocks.StructBlock', [[('settings', 3), ('heading', 69), ('items', 75)]], {}), 77: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 78: ('wagtail.blocks.StructBlock', [[('settings', 3), ('content', 77)]], {}), 79: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48), ('accordion', 50), ('card', 57), ('carousel', 59), ('film_strip', 61), ('image_gallery', 63), ('modal', 68), ('pricelist', 76), ('reusable_content', 78)]], {'label': 'Content'}), 80: ('wagtail.blocks.StructBlock', [[('settings', 12), ('column_size', 13), ('content', 79)]], {}), 81: ('wagtail.blocks.StreamBlock', [[('content', 80)]], {'label': 'Content'}), 82: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 10), ('content', 81)]], {}), 83: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/cardgrid_group.html', 'Card group - attached cards of equal size'), ('coderedcms/blocks/cardgrid_deck.html', 'Card deck - separate cards of equal size'), ('coderedcms/blocks/cardgrid_columns.html', 'Card masonry - fluid brick pattern')], 'label': 'Template', 'required': False}), 84: ('wagtail.blocks.StructBlock', [[('custom_template', 83), ('custom_css_class', 1), ('custom_id', 2)]], {}), 85: ('wagtail.blocks.StreamBlock', [[('card', 57)]], {'label': 'Content'}), 86: ('wagtail.blocks.StructBlock', [[('settings', 84), ('fluid', 10), ('content', 85)]], {}), 87: ('wagtail.blocks.StreamBlock', [[('row', 82), ('cardgrid', 86), ('html', 29)]], {'label': 'Content'}), 88: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 4), ('is_parallax', 5), ('background_image', 6), ('tile_image', 7), ('background_color', 8), ('foreground_color', 9), ('content', 87)]], {})}, null=True)),
                ('default_calendar_view', models.CharField(blank=True, choices=[('', 'No calendar'), ('month', 'Month'), ('agendaWeek', 'Week'), ('agendaDay', 'Day'), ('listMonth', 'List of events')], default='month', help_text='The default look of the calendar on this page.', max_length=255, verbose_name='Calendar Style')),
                ('event_style', models.CharField(blank=True, choices=[('', 'Default'), ('block', 'Solid rectangles'), ('list-item', 'Dots with labels')], default='', help_text='How events look on the calendar.', max_length=255, verbose_name='Event Style')),
            ],
            options={
                'verbose_name': 'Events Landing Page',
            },
            bases=('coderedcms.coderedpage',),
        ),
        migrations.CreateModel(
            name='EventPage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('hero', 88), ('row', 82), ('cardgrid', 86), ('html', 29)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2)]], {}), 4: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'label': 'Full width', 'required': False}), 5: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Background images scroll slower than foreground images, creating an illusion of depth.', 'label': 'Parallax Effect', 'required': False}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'label': 'Tile background image', 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Background color', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Text color', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.BooleanBlock', (), {'label': 'Full width', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Always expanded'), ('sm', 'sm - Expand on small screens (phone, 576px) and larger'), ('md', 'md - Expand on medium screens (tablet, 768px) and larger'), ('lg', 'lg - Expand on large screens (laptop, 992px) and larger'), ('xl', 'xl - Expand on extra large screens (wide monitor, 1200px)')], 'help_text': 'Screen size at which the column will expand horizontally or stack vertically.', 'required': False, 'verbose_name': 'Column Breakpoint'}), 12: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('column_breakpoint', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Automatically size'), ('12', 'Full row'), ('6', 'Half - 1/2 column'), ('4', 'Thirds - 1/3 column'), ('8', 'Thirds - 2/3 column'), ('3', 'Quarters - 1/4 column'), ('9', 'Quarters - 3/4 column'), ('2', 'Sixths - 1/6 column'), ('10', 'Sixths - 5/6 column'), ('1', 'Twelfths - 1/12 column'), ('5', 'Twelfths - 5/12 column'), ('7', 'Twelfths - 7/12 column'), ('11', 'Twelfths - 11/12 column')], 'label': 'Column size', 'required': False}), 14: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 15: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('ga_tracking_event_category', 15), ('ga_tracking_event_label', 16)]], {}), 18: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 19: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 20: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 23: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('button_style', 22), ('button_size', 23)]], {}), 25: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 26: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 28: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('image', 25), ('alt_text', 27)]], {}), 29: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 30: ('wagtail.blocks.StructBlock', [[('settings', 17), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('downloadable_file', 19)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 32: ('wagtail.blocks.StructBlock', [[('settings', 3), ('url', 31)]], {}), 33: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 34: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('settings', 3), ('text', 33), ('author', 34)]], {}), 36: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 37: ('wagtail.blocks.StructBlock', [[('settings', 3), ('table', 36)]], {}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 41: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('settings', 3), ('search', 38), ('map_title', 39), ('place_id', 40), ('map_zoom_level', 41)]], {}), 43: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 44: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 45: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 46: ('wagtail.blocks.StructBlock', [[('settings', 3), ('indexed_by', 43), ('classified_by', 44), ('num_posts', 45)]], {}), 47: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 48: ('wagtail.blocks.StructBlock', [[('settings', 3), ('page', 47)]], {}), 49: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 50: ('wagtail.blocks.StructBlock', [[('settings', 3), ('accordion', 49)]], {}), 51: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 52: ('wagtail.blocks.StructBlock', [[('custom_template', 51), ('custom_css_class', 1), ('custom_id', 2)]], {}), 53: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 56: ('wagtail.blocks.StreamBlock', [[('Links', 24)]], {'blank': True, 'label': 'Links', 'required': False}), 57: ('wagtail.blocks.StructBlock', [[('settings', 52), ('image', 53), ('title', 21), ('subtitle', 54), ('description', 55), ('links', 56)]], {}), 58: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 59: ('wagtail.blocks.StructBlock', [[('settings', 3), ('carousel', 58)]], {}), 60: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 61: ('wagtail.blocks.StructBlock', [[('settings', 3), ('film_strip', 60)]], {}), 62: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 63: ('wagtail.blocks.StructBlock', [[('settings', 3), ('collection', 62)]], {}), 64: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 65: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48)]], {'label': 'Content'}), 66: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 67: ('wagtail.blocks.StreamBlock', [[('text', 66), ('button', 24)]], {'label': 'Modal footer', 'required': False}), 68: ('wagtail.blocks.StructBlock', [[('settings', 3), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('header', 64), ('content', 65), ('footer', 67)]], {}), 69: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 70: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 71: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 72: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 73: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 74: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 70), ('name', 71), ('description', 72), ('price', 73)]], {}), 75: ('wagtail.blocks.StreamBlock', [[('item', 74)]], {'label': 'Items'}), 76: ('wagtail.blocks.StructBlock', [[('settings', 3), ('heading', 69), ('items', 75)]], {}), 77: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 78: ('wagtail.blocks.StructBlock', [[('settings', 3), ('content', 77)]], {}), 79: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48), ('accordion', 50), ('card', 57), ('carousel', 59), ('film_strip', 61), ('image_gallery', 63), ('modal', 68), ('pricelist', 76), ('reusable_content', 78)]], {'label': 'Content'}), 80: ('wagtail.blocks.StructBlock', [[('settings', 12), ('column_size', 13), ('content', 79)]], {}), 81: ('wagtail.blocks.StreamBlock', [[('content', 80)]], {'label': 'Content'}), 82: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 10), ('content', 81)]], {}), 83: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/cardgrid_group.html', 'Card group - attached cards of equal size'), ('coderedcms/blocks/cardgrid_deck.html', 'Card deck - separate cards of equal size'), ('coderedcms/blocks/cardgrid_columns.html', 'Card masonry - fluid brick pattern')], 'label': 'Template', 'required': False}), 84: ('wagtail.blocks.StructBlock', [[('custom_template', 83), ('custom_css_class', 1), ('custom_id', 2)]], {}), 85: ('wagtail.blocks.StreamBlock', [[('card', 57)]], {'label': 'Content'}), 86: ('wagtail.blocks.StructBlock', [[('settings', 84), ('fluid', 10), ('content', 85)]], {}), 87: ('wagtail.blocks.StreamBlock', [[('row', 82), ('cardgrid', 86), ('html', 29)]], {'label': 'Content'}), 88: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 4), ('is_parallax', 5), ('background_image', 6), ('tile_image', 7), ('background_color', 8), ('foreground_color', 9), ('content', 87)]], {})}, null=True)),
                ('calendar_color', coderedcms.fields.ColorField(blank=True, help_text='The color that the event will use when displayed on a calendar.', max_length=255)),
                ('address', models.TextField(blank=True, verbose_name='Address')),
            ],
            options={
                'verbose_name': 'Event Page',
            },
            bases=('coderedcms.coderedpage', models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('hero', 88), ('row', 82), ('cardgrid', 86), ('html', 29)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2)]], {}), 4: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'label': 'Full width', 'required': False}), 5: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Background images scroll slower than foreground images, creating an illusion of depth.', 'label': 'Parallax Effect', 'required': False}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'label': 'Tile background image', 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Background color', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Text color', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.BooleanBlock', (), {'label': 'Full width', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Always expanded'), ('sm', 'sm - Expand on small screens (phone, 576px) and larger'), ('md', 'md - Expand on medium screens (tablet, 768px) and larger'), ('lg', 'lg - Expand on large screens (laptop, 992px) and larger'), ('xl', 'xl - Expand on extra large screens (wide monitor, 1200px)')], 'help_text': 'Screen size at which the column will expand horizontally or stack vertically.', 'required': False, 'verbose_name': 'Column Breakpoint'}), 12: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('column_breakpoint', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Automatically size'), ('12', 'Full row'), ('6', 'Half - 1/2 column'), ('4', 'Thirds - 1/3 column'), ('8', 'Thirds - 2/3 column'), ('3', 'Quarters - 1/4 column'), ('9', 'Quarters - 3/4 column'), ('2', 'Sixths - 1/6 column'), ('10', 'Sixths - 5/6 column'), ('1', 'Twelfths - 1/12 column'), ('5', 'Twelfths - 5/12 column'), ('7', 'Twelfths - 7/12 column'), ('11', 'Twelfths - 11/12 column')], 'label': 'Column size', 'required': False}), 14: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 15: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('ga_tracking_event_category', 15), ('ga_tracking_event_label', 16)]], {}), 18: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 19: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 20: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 23: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('button_style', 22), ('button_size', 23)]], {}), 25: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 26: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 28: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('image', 25), ('alt_text', 27)]], {}), 29: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 30: ('wagtail.blocks.StructBlock', [[('settings', 17), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('downloadable_file', 19)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 32: ('wagtail.blocks.StructBlock', [[('settings', 3), ('url', 31)]], {}), 33: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 34: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('settings', 3), ('text', 33), ('author', 34)]], {}), 36: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 37: ('wagtail.blocks.StructBlock', [[('settings', 3), ('table', 36)]], {}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 41: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('settings', 3), ('search', 38), ('map_title', 39), ('place_id', 40), ('map_zoom_level', 41)]], {}), 43: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 44: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 45: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 46: ('wagtail.blocks.StructBlock', [[('settings', 3), ('indexed_by', 43), ('classified_by', 44), ('num_posts', 45)]], {}), 47: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 48: ('wagtail.blocks.StructBlock', [[('settings', 3), ('page', 47)]], {}), 49: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 50: ('wagtail.blocks.StructBlock', [[('settings', 3), ('accordion', 49)]], {}), 51: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 52: ('wagtail.blocks.StructBlock', [[('custom_template', 51), ('custom_css_class', 1), ('custom_id', 2)]], {}), 53: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 56: ('wagtail.blocks.StreamBlock', [[('Links', 24)]], {'blank': True, 'label': 'Links', 'required': False}), 57: ('wagtail.blocks.StructBlock', [[('settings', 52), ('image', 53), ('title', 21), ('subtitle', 54), ('description', 55), ('links', 56)]], {}), 58: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 59: ('wagtail.blocks.StructBlock', [[('settings', 3), ('carousel', 58)]], {}), 60: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 61: ('wagtail.blocks.StructBlock', [[('settings', 3), ('film_strip', 60)]], {}), 62: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 63: ('wagtail.blocks.StructBlock', [[('settings', 3), ('collection', 62)]], {}), 64: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 65: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48)]], {'label': 'Content'}), 66: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 67: ('wagtail.blocks.StreamBlock', [[('text', 66), ('button', 24)]], {'label': 'Modal footer', 'required': False}), 68: ('wagtail.blocks.StructBlock', [[('settings', 3), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('header', 64), ('content', 65), ('footer', 67)]], {}), 69: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 70: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 71: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 72: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 73: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 74: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 70), ('name', 71), ('description', 72), ('price', 73)]], {}), 75: ('wagtail.blocks.StreamBlock', [[('item', 74)]], {'label': 'Items'}), 76: ('wagtail.blocks.StructBlock', [[('settings', 3), ('heading', 69), ('items', 75)]], {}), 77: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 78: ('wagtail.blocks.StructBlock', [[('settings', 3), ('content', 77)]], {}), 79: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48), ('accordion', 50), ('card', 57), ('carousel', 59), ('film_strip', 61), ('image_gallery', 63), ('modal', 68), ('pricelist', 76), ('reusable_content', 78)]], {'label': 'Content'}), 80: ('wagtail.blocks.StructBlock', [[('settings', 12), ('column_size', 13), ('content', 79)]], {}), 81: ('wagtail.blocks.StreamBlock', [[('content', 80)]], {'label': 'Content'}), 82: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 10), ('content', 81)]], {}), 83: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/cardgrid_group.html', 'Card group - attached cards of equal size'), ('coderedcms/blocks/cardgrid_deck.html', 'Card deck - separate cards of equal size'), ('coderedcms/blocks/cardgrid_columns.html', 'Card masonry - fluid brick pattern')], 'label': 'Template', 'required': False}), 84: ('wagtail.blocks.StructBlock', [[('custom_template', 83), ('custom_css_class', 1), ('custom_id', 2)]], {}), 85: ('wagtail.blocks.StreamBlock', [[('card', 57)]], {'label': 'Content'}), 86: ('wagtail.blocks.StructBlock', [[('settings', 84), ('fluid', 10), ('content', 85)]], {}), 87: ('wagtail.blocks.StreamBlock', [[('row', 82), ('cardgrid', 86), ('html', 29)]], {'label': 'Content'}), 88: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 4), ('is_parallax', 5), ('background_image', 6), ('tile_image', 7), ('background_color', 8), ('foreground_color', 9), ('content', 87)]], {})}, null=True)),
                ('to_address', models.CharField(blank=True, help_text='Optional - email form submissions to this address. Separate multiple addresses by comma.', max_length=255, verbose_name='Email form submissions to')),
                ('reply_address', models.CharField(blank=True, help_text='Optional - to reply to the submitter, specify the email field here. For example, if a form field above is labeled "Your Email", enter: {{ your_email }}', max_length=255, verbose_name='Reply-to address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='Subject')),
                ('save_to_database', models.BooleanField(default=True, help_text='Submissions are saved to database and can be exported at any time.', verbose_name='Save form submissions')),
                ('button_text', models.CharField(default='Submit', max_length=255, verbose_name='Button text')),
                ('button_style', models.CharField(blank=True, choices=[('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], default='btn-primary', max_length=255, verbose_name='Button style')),
                ('button_size', models.CharField(blank=True, choices=[('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], default='', max_length=255, verbose_name='Button Size')),
                ('button_css_class', models.CharField(blank=True, help_text='Custom CSS class applied to the submit button.', max_length=255, verbose_name='Button CSS class')),
                ('form_css_class', models.CharField(blank=True, help_text='Custom CSS class applied to <form> element.', max_length=255, verbose_name='Form CSS Class')),
                ('form_id', models.CharField(blank=True, help_text='Custom ID applied to <form> element.', max_length=255, verbose_name='Form ID')),
                ('form_golive_at', models.DateTimeField(blank=True, help_text='Date and time when the FORM goes live on the page.', null=True, verbose_name='Form go live date/time')),
                ('form_expire_at', models.DateTimeField(blank=True, help_text='Date and time when the FORM will no longer be available on the page.', null=True, verbose_name='Form expiry date/time')),
                ('spam_protection', models.BooleanField(default=True, help_text='When enabled, the CMS will filter out spam form submissions for this page.', verbose_name='Spam Protection')),
                ('thank_you_page', models.ForeignKey(blank=True, help_text='The page users are redirected to after submitting the form.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Thank you page')),
            ],
            options={
                'verbose_name': 'Form',
            },
            bases=('coderedcms.coderedpage', models.Model),
        ),
        migrations.CreateModel(
            name='LocationIndexPage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('hero', 88), ('row', 82), ('cardgrid', 86), ('html', 29)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2)]], {}), 4: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'label': 'Full width', 'required': False}), 5: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Background images scroll slower than foreground images, creating an illusion of depth.', 'label': 'Parallax Effect', 'required': False}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'label': 'Tile background image', 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Background color', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Text color', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.BooleanBlock', (), {'label': 'Full width', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Always expanded'), ('sm', 'sm - Expand on small screens (phone, 576px) and larger'), ('md', 'md - Expand on medium screens (tablet, 768px) and larger'), ('lg', 'lg - Expand on large screens (laptop, 992px) and larger'), ('xl', 'xl - Expand on extra large screens (wide monitor, 1200px)')], 'help_text': 'Screen size at which the column will expand horizontally or stack vertically.', 'required': False, 'verbose_name': 'Column Breakpoint'}), 12: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('column_breakpoint', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Automatically size'), ('12', 'Full row'), ('6', 'Half - 1/2 column'), ('4', 'Thirds - 1/3 column'), ('8', 'Thirds - 2/3 column'), ('3', 'Quarters - 1/4 column'), ('9', 'Quarters - 3/4 column'), ('2', 'Sixths - 1/6 column'), ('10', 'Sixths - 5/6 column'), ('1', 'Twelfths - 1/12 column'), ('5', 'Twelfths - 5/12 column'), ('7', 'Twelfths - 7/12 column'), ('11', 'Twelfths - 11/12 column')], 'label': 'Column size', 'required': False}), 14: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 15: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('ga_tracking_event_category', 15), ('ga_tracking_event_label', 16)]], {}), 18: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 19: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 20: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 23: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('button_style', 22), ('button_size', 23)]], {}), 25: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 26: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 28: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('image', 25), ('alt_text', 27)]], {}), 29: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 30: ('wagtail.blocks.StructBlock', [[('settings', 17), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('downloadable_file', 19)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 32: ('wagtail.blocks.StructBlock', [[('settings', 3), ('url', 31)]], {}), 33: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 34: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('settings', 3), ('text', 33), ('author', 34)]], {}), 36: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 37: ('wagtail.blocks.StructBlock', [[('settings', 3), ('table', 36)]], {}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 41: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('settings', 3), ('search', 38), ('map_title', 39), ('place_id', 40), ('map_zoom_level', 41)]], {}), 43: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 44: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 45: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 46: ('wagtail.blocks.StructBlock', [[('settings', 3), ('indexed_by', 43), ('classified_by', 44), ('num_posts', 45)]], {}), 47: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 48: ('wagtail.blocks.StructBlock', [[('settings', 3), ('page', 47)]], {}), 49: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 50: ('wagtail.blocks.StructBlock', [[('settings', 3), ('accordion', 49)]], {}), 51: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 52: ('wagtail.blocks.StructBlock', [[('custom_template', 51), ('custom_css_class', 1), ('custom_id', 2)]], {}), 53: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 56: ('wagtail.blocks.StreamBlock', [[('Links', 24)]], {'blank': True, 'label': 'Links', 'required': False}), 57: ('wagtail.blocks.StructBlock', [[('settings', 52), ('image', 53), ('title', 21), ('subtitle', 54), ('description', 55), ('links', 56)]], {}), 58: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 59: ('wagtail.blocks.StructBlock', [[('settings', 3), ('carousel', 58)]], {}), 60: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 61: ('wagtail.blocks.StructBlock', [[('settings', 3), ('film_strip', 60)]], {}), 62: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 63: ('wagtail.blocks.StructBlock', [[('settings', 3), ('collection', 62)]], {}), 64: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 65: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48)]], {'label': 'Content'}), 66: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 67: ('wagtail.blocks.StreamBlock', [[('text', 66), ('button', 24)]], {'label': 'Modal footer', 'required': False}), 68: ('wagtail.blocks.StructBlock', [[('settings', 3), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('header', 64), ('content', 65), ('footer', 67)]], {}), 69: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 70: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 71: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 72: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 73: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 74: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 70), ('name', 71), ('description', 72), ('price', 73)]], {}), 75: ('wagtail.blocks.StreamBlock', [[('item', 74)]], {'label': 'Items'}), 76: ('wagtail.blocks.StructBlock', [[('settings', 3), ('heading', 69), ('items', 75)]], {}), 77: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 78: ('wagtail.blocks.StructBlock', [[('settings', 3), ('content', 77)]], {}), 79: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48), ('accordion', 50), ('card', 57), ('carousel', 59), ('film_strip', 61), ('image_gallery', 63), ('modal', 68), ('pricelist', 76), ('reusable_content', 78)]], {'label': 'Content'}), 80: ('wagtail.blocks.StructBlock', [[('settings', 12), ('column_size', 13), ('content', 79)]], {}), 81: ('wagtail.blocks.StreamBlock', [[('content', 80)]], {'label': 'Content'}), 82: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 10), ('content', 81)]], {}), 83: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/cardgrid_group.html', 'Card group - attached cards of equal size'), ('coderedcms/blocks/cardgrid_deck.html', 'Card deck - separate cards of equal size'), ('coderedcms/blocks/cardgrid_columns.html', 'Card masonry - fluid brick pattern')], 'label': 'Template', 'required': False}), 84: ('wagtail.blocks.StructBlock', [[('custom_template', 83), ('custom_css_class', 1), ('custom_id', 2)]], {}), 85: ('wagtail.blocks.StreamBlock', [[('card', 57)]], {'label': 'Content'}), 86: ('wagtail.blocks.StructBlock', [[('settings', 84), ('fluid', 10), ('content', 85)]], {}), 87: ('wagtail.blocks.StreamBlock', [[('row', 82), ('cardgrid', 86), ('html', 29)]], {'label': 'Content'}), 88: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 4), ('is_parallax', 5), ('background_image', 6), ('tile_image', 7), ('background_color', 8), ('foreground_color', 9), ('content', 87)]], {})}, null=True)),
                ('center_latitude', models.FloatField(blank=True, default=0, help_text='The default latitude you want the map set to.', null=True)),
                ('center_longitude', models.FloatField(blank=True, default=0, help_text='The default longitude you want the map set to.', null=True)),
                ('zoom', models.IntegerField(default=8, help_text='Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', validators=[django.core.validators.MaxValueValidator(20), django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Location Landing Page',
            },
            bases=('coderedcms.coderedpage',),
        ),
        migrations.CreateModel(
            name='LocationPage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('text', 0), ('button', 13), ('image', 16), ('image_link', 18), ('html', 19), ('download', 20), ('embed_video', 22), ('quote', 25), ('table', 27), ('google_map', 32), ('page_list', 36), ('page_preview', 38), ('accordion', 40), ('card', 47), ('carousel', 49), ('film_strip', 51), ('image_gallery', 53), ('modal', 58), ('pricelist', 66), ('reusable_content', 68)], blank=True, block_lookup={0: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 4: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 5: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 6: ('wagtail.blocks.StructBlock', [[('custom_template', 1), ('custom_css_class', 2), ('custom_id', 3), ('ga_tracking_event_category', 4), ('ga_tracking_event_label', 5)]], {}), 7: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 8: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('settings', 6), ('page_link', 7), ('doc_link', 8), ('other_link', 9), ('button_title', 10), ('button_style', 11), ('button_size', 12)]], {}), 14: ('wagtail.blocks.StructBlock', [[('custom_template', 1), ('custom_css_class', 2), ('custom_id', 3)]], {}), 15: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 16: ('wagtail.blocks.StructBlock', [[('settings', 14), ('image', 15)]], {}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 18: ('wagtail.blocks.StructBlock', [[('settings', 6), ('page_link', 7), ('doc_link', 8), ('other_link', 9), ('button_title', 10), ('image', 15), ('alt_text', 17)]], {}), 19: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 20: ('wagtail.blocks.StructBlock', [[('settings', 6), ('button_style', 11), ('button_size', 12), ('button_title', 10), ('downloadable_file', 8)]], {}), 21: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 22: ('wagtail.blocks.StructBlock', [[('settings', 14), ('url', 21)]], {}), 23: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 24: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('settings', 14), ('text', 23), ('author', 24)]], {}), 26: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 27: ('wagtail.blocks.StructBlock', [[('settings', 14), ('table', 26)]], {}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 29: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 31: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 32: ('wagtail.blocks.StructBlock', [[('settings', 14), ('search', 28), ('map_title', 29), ('place_id', 30), ('map_zoom_level', 31)]], {}), 33: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 34: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 35: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 36: ('wagtail.blocks.StructBlock', [[('settings', 14), ('indexed_by', 33), ('classified_by', 34), ('num_posts', 35)]], {}), 37: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 38: ('wagtail.blocks.StructBlock', [[('settings', 14), ('page', 37)]], {}), 39: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 40: ('wagtail.blocks.StructBlock', [[('settings', 14), ('accordion', 39)]], {}), 41: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('custom_template', 41), ('custom_css_class', 2), ('custom_id', 3)]], {}), 43: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 44: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 45: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 46: ('wagtail.blocks.StreamBlock', [[('Links', 13)]], {'blank': True, 'label': 'Links', 'required': False}), 47: ('wagtail.blocks.StructBlock', [[('settings', 42), ('image', 43), ('title', 10), ('subtitle', 44), ('description', 45), ('links', 46)]], {}), 48: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 49: ('wagtail.blocks.StructBlock', [[('settings', 14), ('carousel', 48)]], {}), 50: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 51: ('wagtail.blocks.StructBlock', [[('settings', 14), ('film_strip', 50)]], {}), 52: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 53: ('wagtail.blocks.StructBlock', [[('settings', 14), ('collection', 52)]], {}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.StreamBlock', [[('text', 0), ('button', 13), ('image', 16), ('image_link', 18), ('html', 19), ('download', 20), ('embed_video', 22), ('quote', 25), ('table', 27), ('google_map', 32), ('page_list', 36), ('page_preview', 38)]], {'label': 'Content'}), 56: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 57: ('wagtail.blocks.StreamBlock', [[('text', 56), ('button', 13)]], {'label': 'Modal footer', 'required': False}), 58: ('wagtail.blocks.StructBlock', [[('settings', 14), ('button_style', 11), ('button_size', 12), ('button_title', 10), ('header', 54), ('content', 55), ('footer', 57)]], {}), 59: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 60: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 61: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 62: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 63: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 64: ('wagtail.blocks.StructBlock', [[('settings', 14), ('image', 60), ('name', 61), ('description', 62), ('price', 63)]], {}), 65: ('wagtail.blocks.StreamBlock', [[('item', 64)]], {'label': 'Items'}), 66: ('wagtail.blocks.StructBlock', [[('settings', 14), ('heading', 59), ('items', 65)]], {}), 67: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 68: ('wagtail.blocks.StructBlock', [[('settings', 14), ('content', 67)]], {})}, null=True)),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('auto_update_latlng', models.BooleanField(default=True, help_text='If checked, automatically update the latitude and longitude when the address is updated.', verbose_name='Auto Update Latitude and Longitude')),
                ('map_title', models.CharField(blank=True, help_text='If this is filled out, this is the title that will be used on the map.', max_length=255, verbose_name='Map Title')),
                ('map_description', models.CharField(blank=True, help_text='If this is filled out, this is the description that will be used on the map.', max_length=255, verbose_name='Map Description')),
                ('website', models.TextField(blank=True, verbose_name='Website')),
                ('phone_number', models.CharField(blank=True, max_length=255, verbose_name='Phone Number')),
            ],
            options={
                'verbose_name': 'Location Page',
            },
            bases=('coderedcms.coderedpage',),
        ),
        migrations.CreateModel(
            name='WebPage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('hero', 88), ('row', 82), ('cardgrid', 86), ('html', 29)], blank=True, block_lookup={0: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2)]], {}), 4: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'label': 'Full width', 'required': False}), 5: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Background images scroll slower than foreground images, creating an illusion of depth.', 'label': 'Parallax Effect', 'required': False}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': False}), 7: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'label': 'Tile background image', 'required': False}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Background color', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Hexadecimal, rgba, or CSS color notation (e.g. #ff0011)', 'label': 'Text color', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.BooleanBlock', (), {'label': 'Full width', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Always expanded'), ('sm', 'sm - Expand on small screens (phone, 576px) and larger'), ('md', 'md - Expand on medium screens (tablet, 768px) and larger'), ('lg', 'lg - Expand on large screens (laptop, 992px) and larger'), ('xl', 'xl - Expand on extra large screens (wide monitor, 1200px)')], 'help_text': 'Screen size at which the column will expand horizontally or stack vertically.', 'required': False, 'verbose_name': 'Column Breakpoint'}), 12: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('column_breakpoint', 11)]], {}), 13: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Automatically size'), ('12', 'Full row'), ('6', 'Half - 1/2 column'), ('4', 'Thirds - 1/3 column'), ('8', 'Thirds - 2/3 column'), ('3', 'Quarters - 1/4 column'), ('9', 'Quarters - 3/4 column'), ('2', 'Sixths - 1/6 column'), ('10', 'Sixths - 5/6 column'), ('1', 'Twelfths - 1/12 column'), ('5', 'Twelfths - 5/12 column'), ('7', 'Twelfths - 7/12 column'), ('11', 'Twelfths - 11/12 column')], 'label': 'Column size', 'required': False}), 14: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 15: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 17: ('wagtail.blocks.StructBlock', [[('custom_template', 0), ('custom_css_class', 1), ('custom_id', 2), ('ga_tracking_event_category', 15), ('ga_tracking_event_label', 16)]], {}), 18: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 19: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 20: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 21: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 22: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 23: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('button_style', 22), ('button_size', 23)]], {}), 25: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 26: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 28: ('wagtail.blocks.StructBlock', [[('settings', 17), ('page_link', 18), ('doc_link', 19), ('other_link', 20), ('button_title', 21), ('image', 25), ('alt_text', 27)]], {}), 29: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 30: ('wagtail.blocks.StructBlock', [[('settings', 17), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('downloadable_file', 19)]], {}), 31: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 32: ('wagtail.blocks.StructBlock', [[('settings', 3), ('url', 31)]], {}), 33: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 34: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('settings', 3), ('text', 33), ('author', 34)]], {}), 36: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 37: ('wagtail.blocks.StructBlock', [[('settings', 3), ('table', 36)]], {}), 38: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 39: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 40: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 41: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('settings', 3), ('search', 38), ('map_title', 39), ('place_id', 40), ('map_zoom_level', 41)]], {}), 43: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 44: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 45: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 46: ('wagtail.blocks.StructBlock', [[('settings', 3), ('indexed_by', 43), ('classified_by', 44), ('num_posts', 45)]], {}), 47: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 48: ('wagtail.blocks.StructBlock', [[('settings', 3), ('page', 47)]], {}), 49: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 50: ('wagtail.blocks.StructBlock', [[('settings', 3), ('accordion', 49)]], {}), 51: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 52: ('wagtail.blocks.StructBlock', [[('custom_template', 51), ('custom_css_class', 1), ('custom_id', 2)]], {}), 53: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 56: ('wagtail.blocks.StreamBlock', [[('Links', 24)]], {'blank': True, 'label': 'Links', 'required': False}), 57: ('wagtail.blocks.StructBlock', [[('settings', 52), ('image', 53), ('title', 21), ('subtitle', 54), ('description', 55), ('links', 56)]], {}), 58: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 59: ('wagtail.blocks.StructBlock', [[('settings', 3), ('carousel', 58)]], {}), 60: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 61: ('wagtail.blocks.StructBlock', [[('settings', 3), ('film_strip', 60)]], {}), 62: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 63: ('wagtail.blocks.StructBlock', [[('settings', 3), ('collection', 62)]], {}), 64: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 65: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48)]], {'label': 'Content'}), 66: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 67: ('wagtail.blocks.StreamBlock', [[('text', 66), ('button', 24)]], {'label': 'Modal footer', 'required': False}), 68: ('wagtail.blocks.StructBlock', [[('settings', 3), ('button_style', 22), ('button_size', 23), ('button_title', 21), ('header', 64), ('content', 65), ('footer', 67)]], {}), 69: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 70: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 71: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 72: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 73: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 74: ('wagtail.blocks.StructBlock', [[('settings', 3), ('image', 70), ('name', 71), ('description', 72), ('price', 73)]], {}), 75: ('wagtail.blocks.StreamBlock', [[('item', 74)]], {'label': 'Items'}), 76: ('wagtail.blocks.StructBlock', [[('settings', 3), ('heading', 69), ('items', 75)]], {}), 77: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 78: ('wagtail.blocks.StructBlock', [[('settings', 3), ('content', 77)]], {}), 79: ('wagtail.blocks.StreamBlock', [[('text', 14), ('button', 24), ('image', 26), ('image_link', 28), ('html', 29), ('download', 30), ('embed_video', 32), ('quote', 35), ('table', 37), ('google_map', 42), ('page_list', 46), ('page_preview', 48), ('accordion', 50), ('card', 57), ('carousel', 59), ('film_strip', 61), ('image_gallery', 63), ('modal', 68), ('pricelist', 76), ('reusable_content', 78)]], {'label': 'Content'}), 80: ('wagtail.blocks.StructBlock', [[('settings', 12), ('column_size', 13), ('content', 79)]], {}), 81: ('wagtail.blocks.StreamBlock', [[('content', 80)]], {'label': 'Content'}), 82: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 10), ('content', 81)]], {}), 83: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/cardgrid_group.html', 'Card group - attached cards of equal size'), ('coderedcms/blocks/cardgrid_deck.html', 'Card deck - separate cards of equal size'), ('coderedcms/blocks/cardgrid_columns.html', 'Card masonry - fluid brick pattern')], 'label': 'Template', 'required': False}), 84: ('wagtail.blocks.StructBlock', [[('custom_template', 83), ('custom_css_class', 1), ('custom_id', 2)]], {}), 85: ('wagtail.blocks.StreamBlock', [[('card', 57)]], {'label': 'Content'}), 86: ('wagtail.blocks.StructBlock', [[('settings', 84), ('fluid', 10), ('content', 85)]], {}), 87: ('wagtail.blocks.StreamBlock', [[('row', 82), ('cardgrid', 86), ('html', 29)]], {'label': 'Content'}), 88: ('wagtail.blocks.StructBlock', [[('settings', 3), ('fluid', 4), ('is_parallax', 5), ('background_image', 6), ('tile_image', 7), ('background_color', 8), ('foreground_color', 9), ('content', 87)]], {})}, null=True)),
            ],
            options={
                'verbose_name': 'Web Page',
            },
            bases=('coderedcms.coderedpage',),
        ),
        migrations.CreateModel(
            name='FormPageField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.TextField(blank=True, help_text='Default value. Comma or new line separated values supported for checkboxes.', verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('field_type', models.CharField(choices=[('Text', (('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number - only allows integers'), ('url', 'URL'))), ('Choice', (('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('radio', 'Radio buttons'), ('multiselect', 'Multiple select'), ('checkbox', 'Single checkbox'))), ('Date & Time', (('date', 'Date'), ('time', 'Time'), ('datetime', 'Date and time'))), ('File Upload', (('file', 'Secure File - login required to access uploaded files'),)), ('Other', (('hidden', 'Hidden field'),))], default='singleline', max_length=16, verbose_name='field type')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='website.formpage')),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='FormConfirmEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_address', models.CharField(blank=True, help_text='Separate multiple email addresses with commas.', max_length=255, verbose_name='To Addresses')),
                ('from_address', models.CharField(blank=True, help_text='For example: "sender@example.com" or "Sender Name <sender@example.com>" (without quotes).', max_length=255, verbose_name='From Address')),
                ('reply_address', models.CharField(blank=True, help_text='Separate multiple email addresses with commas.', max_length=255, verbose_name='Reply-To Address')),
                ('cc_address', models.CharField(blank=True, help_text='Separate multiple email addresses with commas.', max_length=255, verbose_name='CC')),
                ('bcc_address', models.CharField(blank=True, help_text='Separate multiple email addresses with commas.', max_length=255, verbose_name='BCC')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='Subject')),
                ('body', models.TextField(blank=True, verbose_name='Body')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirmation_emails', to='website.formpage')),
            ],
            options={
                'verbose_name': 'CodeRed Email',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('start', models.DateTimeField(db_index=True, verbose_name='start')),
                ('end', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='end')),
                ('repeat', eventtools.models.ChoiceTextField(blank=True, choices=[('RRULE:FREQ=DAILY', 'Daily'), ('RRULE:FREQ=WEEKLY', 'Weekly'), ('RRULE:FREQ=MONTHLY', 'Monthly'), ('RRULE:FREQ=YEARLY', 'Yearly')], default='', verbose_name='repeat')),
                ('repeat_until', models.DateField(blank=True, null=True, verbose_name='repeat_until')),
                ('event', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrences', to='website.eventpage')),
            ],
            options={
                'verbose_name': 'CodeRed Event Occurrence',
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model, eventtools.models.OccurrenceMixin),
        ),
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('coderedpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='coderedcms.coderedpage')),
                ('body', wagtail.fields.StreamField([('text', 0), ('button', 13), ('image', 16), ('image_link', 18), ('html', 19), ('download', 20), ('embed_video', 22), ('quote', 25), ('table', 27), ('google_map', 32), ('page_list', 36), ('page_preview', 38), ('accordion', 40), ('card', 47), ('carousel', 49), ('film_strip', 51), ('image_gallery', 53), ('modal', 58), ('pricelist', 66), ('reusable_content', 68)], blank=True, block_lookup={0: ('coderedcms.blocks.html_blocks.RichTextBlock', (), {'icon': 'cr-font'}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default')], 'label': 'Template', 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Custom CSS Class', 'max_length': 255, 'required': False}), 3: ('wagtail.blocks.CharBlock', (), {'label': 'Custom ID', 'max_length': 255, 'required': False}), 4: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Category', 'max_length': 255, 'required': False}), 5: ('wagtail.blocks.CharBlock', (), {'label': 'Tracking Event Label', 'max_length': 255, 'required': False}), 6: ('wagtail.blocks.StructBlock', [[('custom_template', 1), ('custom_css_class', 2), ('custom_id', 3), ('ga_tracking_event_category', 4), ('ga_tracking_event_label', 5)]], {}), 7: ('wagtail.blocks.PageChooserBlock', (), {'label': 'Page link', 'required': False}), 8: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'label': 'Document link', 'required': False}), 9: ('wagtail.blocks.CharBlock', (), {'label': 'Other link', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 255, 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-primary', 'Primary'), ('btn-secondary', 'Secondary'), ('btn-success', 'Success'), ('btn-danger', 'Danger'), ('btn-warning', 'Warning'), ('btn-info', 'Info'), ('btn-link', 'Link'), ('btn-light', 'Light'), ('btn-dark', 'Dark'), ('btn-outline-primary', 'Outline Primary'), ('btn-outline-secondary', 'Outline Secondary'), ('btn-outline-success', 'Outline Success'), ('btn-outline-danger', 'Outline Danger'), ('btn-outline-warning', 'Outline Warning'), ('btn-outline-info', 'Outline Info'), ('btn-outline-light', 'Outline Light'), ('btn-outline-dark', 'Outline Dark')], 'label': 'Button Style', 'required': False}), 12: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('btn-sm', 'Small'), ('', 'Default'), ('btn-lg', 'Large')], 'label': 'Button Size', 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('settings', 6), ('page_link', 7), ('doc_link', 8), ('other_link', 9), ('button_title', 10), ('button_style', 11), ('button_size', 12)]], {}), 14: ('wagtail.blocks.StructBlock', [[('custom_template', 1), ('custom_css_class', 2), ('custom_id', 3)]], {}), 15: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image'}), 16: ('wagtail.blocks.StructBlock', [[('settings', 14), ('image', 15)]], {}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'Alternate text to show if the image doesn’t load', 'max_length': 255, 'required': True}), 18: ('wagtail.blocks.StructBlock', [[('settings', 6), ('page_link', 7), ('doc_link', 8), ('other_link', 9), ('button_title', 10), ('image', 15), ('alt_text', 17)]], {}), 19: ('wagtail.blocks.RawHTMLBlock', (), {'form_classname': 'monospace', 'icon': 'code', 'label': 'HTML'}), 20: ('wagtail.blocks.StructBlock', [[('settings', 6), ('button_style', 11), ('button_size', 12), ('button_title', 10), ('downloadable_file', 8)]], {}), 21: ('wagtail.embeds.blocks.EmbedBlock', (), {'help_text': 'Link to a YouTube/Vimeo video, tweet, facebook post, etc.', 'label': 'URL', 'required': True}), 22: ('wagtail.blocks.StructBlock', [[('settings', 14), ('url', 21)]], {}), 23: ('wagtail.blocks.TextBlock', (), {'label': 'Quote Text', 'required': True, 'rows': 4}), 24: ('wagtail.blocks.CharBlock', (), {'label': 'Author', 'max_length': 255, 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('settings', 14), ('text', 23), ('author', 24)]], {}), 26: ('wagtail.contrib.table_block.blocks.TableBlock', (), {}), 27: ('wagtail.blocks.StructBlock', [[('settings', 14), ('table', 26)]], {}), 28: ('wagtail.blocks.CharBlock', (), {'help_text': 'Address or search term used to find your location on the map.', 'label': 'Search query', 'max_length': 255, 'required': False}), 29: ('wagtail.blocks.CharBlock', (), {'help_text': 'Map title for screen readers, ex: "Map to Goodale Park"', 'label': 'Map title', 'max_length': 255, 'required': False}), 30: ('wagtail.blocks.CharBlock', (), {'help_text': 'Requires API key to use place ID.', 'label': 'Google place ID', 'max_length': 255, 'required': False}), 31: ('wagtail.blocks.IntegerBlock', (), {'default': 14, 'help_text': 'Requires API key to use zoom. 1: World, 5: Landmass/continent, 10: City, 15: Streets, 20: Buildings', 'label': 'Map zoom level', 'required': False}), 32: ('wagtail.blocks.StructBlock', [[('settings', 14), ('search', 28), ('map_title', 29), ('place_id', 30), ('map_zoom_level', 31)]], {}), 33: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a preview of pages that are children of the selected page. Uses ordering specified in the page’s LAYOUT tab.', 'label': 'Parent page', 'required': True}), 34: ('coderedcms.blocks.base_blocks.ClassifierTermChooserBlock', (), {'help_text': 'Only show pages that are classified with this term.', 'label': 'Classified as', 'required': False}), 35: ('wagtail.blocks.IntegerBlock', (), {'default': 3, 'label': 'Number of pages to show'}), 36: ('wagtail.blocks.StructBlock', [[('settings', 14), ('indexed_by', 33), ('classified_by', 34), ('num_posts', 35)]], {}), 37: ('wagtail.blocks.PageChooserBlock', (), {'help_text': 'Show a mini preview of the selected page.', 'label': 'Page to preview', 'required': True}), 38: ('wagtail.blocks.StructBlock', [[('settings', 14), ('page', 37)]], {}), 39: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Accordion',), {}), 40: ('wagtail.blocks.StructBlock', [[('settings', 14), ('accordion', 39)]], {}), 41: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('', 'Default'), ('coderedcms/blocks/card_block.html', 'Card'), ('coderedcms/blocks/card_head.html', 'Card with header'), ('coderedcms/blocks/card_foot.html', 'Card with footer'), ('coderedcms/blocks/card_head_foot.html', 'Card with header and footer'), ('coderedcms/blocks/card_blurb.html', 'Blurb - rounded image and no border'), ('coderedcms/blocks/card_img.html', 'Cover image - use image as background')], 'label': 'Template', 'required': False}), 42: ('wagtail.blocks.StructBlock', [[('custom_template', 41), ('custom_css_class', 2), ('custom_id', 3)]], {}), 43: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'max_length': 255, 'required': False}), 44: ('wagtail.blocks.CharBlock', (), {'label': 'Subtitle', 'max_length': 255, 'required': False}), 45: ('wagtail.blocks.RichTextBlock', (), {'features': ['bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link'], 'label': 'Body'}), 46: ('wagtail.blocks.StreamBlock', [[('Links', 13)]], {'blank': True, 'label': 'Links', 'required': False}), 47: ('wagtail.blocks.StructBlock', [[('settings', 42), ('image', 43), ('title', 10), ('subtitle', 44), ('description', 45), ('links', 46)]], {}), 48: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.Carousel',), {}), 49: ('wagtail.blocks.StructBlock', [[('settings', 14), ('carousel', 48)]], {}), 50: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.FilmStrip',), {}), 51: ('wagtail.blocks.StructBlock', [[('settings', 14), ('film_strip', 50)]], {}), 52: ('coderedcms.blocks.base_blocks.CollectionChooserBlock', (), {'label': 'Image Collection', 'required': True}), 53: ('wagtail.blocks.StructBlock', [[('settings', 14), ('collection', 52)]], {}), 54: ('wagtail.blocks.CharBlock', (), {'label': 'Modal heading', 'max_length': 255, 'required': False}), 55: ('wagtail.blocks.StreamBlock', [[('text', 0), ('button', 13), ('image', 16), ('image_link', 18), ('html', 19), ('download', 20), ('embed_video', 22), ('quote', 25), ('table', 27), ('google_map', 32), ('page_list', 36), ('page_preview', 38)]], {'label': 'Content'}), 56: ('wagtail.blocks.CharBlock', (), {'icon': 'cr-font', 'label': 'Simple Text', 'max_length': 255}), 57: ('wagtail.blocks.StreamBlock', [[('text', 56), ('button', 13)]], {'label': 'Modal footer', 'required': False}), 58: ('wagtail.blocks.StructBlock', [[('settings', 14), ('button_style', 11), ('button_size', 12), ('button_title', 10), ('header', 54), ('content', 55), ('footer', 57)]], {}), 59: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 255, 'required': False}), 60: ('wagtail.images.blocks.ImageChooserBlock', (), {'label': 'Image', 'required': False}), 61: ('wagtail.blocks.CharBlock', (), {'label': 'Name', 'max_length': 255, 'required': True}), 62: ('wagtail.blocks.TextBlock', (), {'label': 'Description', 'required': False, 'rows': 4}), 63: ('wagtail.blocks.CharBlock', (), {'help_text': 'Any text here. Include currency sign if desired.', 'label': 'Price', 'required': True}), 64: ('wagtail.blocks.StructBlock', [[('settings', 14), ('image', 60), ('name', 61), ('description', 62), ('price', 63)]], {}), 65: ('wagtail.blocks.StreamBlock', [[('item', 64)]], {'label': 'Items'}), 66: ('wagtail.blocks.StructBlock', [[('settings', 14), ('heading', 59), ('items', 65)]], {}), 67: ('wagtail.snippets.blocks.SnippetChooserBlock', ('coderedcms.ReusableContent',), {}), 68: ('wagtail.blocks.StructBlock', [[('settings', 14), ('content', 67)]], {})}, null=True)),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Caption')),
                ('author_display', models.CharField(blank=True, help_text='Override how the author’s name displays on this article.', max_length=255, verbose_name='Display author as')),
                ('date_display', models.DateField(blank=True, null=True, verbose_name='Display publish date')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Article',
                'ordering': ['-first_published_at'],
            },
            bases=('coderedcms.coderedpage',),
        ),
    ]
